---
apiVersion: "v1"
kind: "Template"
metadata:
  annotations: {}
  finalizers: []
  labels: {}
  name: "backend"
  ownerReferences: []
objects:
- apiVersion: "v1"
  kind: "Service"
  metadata:
    annotations: {}
    finalizers: []
    labels:
      provider: "fabric8"
      project: "backend"
      version: "1.0"
      group: "com.redhat.microservices"
    name: "backend"
    ownerReferences: []
  spec:
    deprecatedPublicIPs: []
    externalIPs: []
    loadBalancerSourceRanges: []
    ports:
    - port: 80
      protocol: "TCP"
      targetPort: 8080
    selector:
      project: "backend"
      provider: "fabric8"
      group: "com.redhat.microservices"
    type: "LoadBalancer"
- apiVersion: "v1"
  kind: "ReplicationController"
  metadata:
    annotations:
      fabric8.io/git-branch: "master"
      fabric8.io/git-commit: "b0463cd713e99882e109ee27ec0fcc6918786981"
    finalizers: []
    labels:
      provider: "fabric8"
      project: "backend"
      version: "1.0"
      group: "com.redhat.microservices"
    name: "backend"
    ownerReferences: []
  spec:
    replicas: 1
    selector:
      provider: "fabric8"
      project: "backend"
      version: "1.0"
      group: "com.redhat.microservices"
    template:
      metadata:
        annotations: {}
        finalizers: []
        labels:
          provider: "fabric8"
          project: "backend"
          version: "1.0"
          group: "com.redhat.microservices"
        ownerReferences: []
      spec:
        containers:
        - args: []
          command: []
          env:
          - name: "KUBERNETES_NAMESPACE"
            valueFrom:
              fieldRef:
                fieldPath: "metadata.namespace"
          image: "fabric8/backend:1.0"
          name: "backend"
          ports:
          - containerPort: 8080
            name: "http"
          - containerPort: 8778
            name: "jolokia"
          resources:
            limits:
              cpu: "0"
              memory: "0"
            requests:
              cpu: "0"
              memory: "0"
          securityContext: {}
          volumeMounts: []
        imagePullSecrets: []
        nodeSelector: {}
        volumes: []
parameters: []
